{"version":3,"sources":["comp/Nav.js","comp/Footer.js","comp/Listofgame.js","comp/GameItem.js","comp/Mygames.js","Home.js","comp/Editgame.js","comp/Addgame.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","className","to","id","React","Component","Footer","Listofgame","allGames","this","props","games","map","game","index","key","name","src","background_image","released","rating","onClick","add","GameItem","list","delete","pathname","state","Mygames","listOfDeleted","filmIndex","indexOf","splice","push","setState","myGameslist","ourgame","deletedlist","deleteSelectedGame","console","log","gameofselect","deleteAllGame","Home","classNames","horizontalCss","autoplay","item","height","width","Editgame","newGameName","location","onChange","e","target","value","type","preventDefault","edit","Addgame","ontextchange","newItem","ontextchange1","newItem1","gamename","gamerating","test","maxLength","Addowngame","App","Addgametomylist","Mylistgame","Mylistgame_2","deleteGame","saveEdit","array","findgameindex","game1","newGameArr","filter","savedGame","Games","axios","method","url","then","res","data","results","catch","err","Nav","exact","path","component","editGame","editTheValue","ontextchangeforedit","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.166f41c5.chunk.js","sourcesContent":["import React from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Route,\r\n    Link\r\n} from 'react-router-dom';\r\nclass NavBar extends React.Component{\r\n\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n\r\n                <h4><Link className=\"navbar-brand\" to=\"/Home\">Game</Link>{' '}</h4>\r\n                {/* <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\r\n                        data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\r\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button> */}\r\n\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"nav-item\">\r\n                           <h5><Link className=\"nav-link\" to=\"/Home\">Home</Link>{' '}</h5>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <h5><Link className=\"nav-link\" to=\"/List\">List Of Games</Link>{' '}</h5>\r\n                        </li>\r\n\r\n                        <li className=\"nav-item\">\r\n                            <h5><Link className=\"nav-link\" to=\"/mygames\">My Games</Link>{' '}</h5>\r\n                        </li>\r\n                    </ul>\r\n\r\n                </div>\r\n            </nav>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\n\r\n\r\nexport default class Footer extends React.Component{\r\n\r\n    render() {\r\n        return (\r\n\r\n                <footer className={\"center clear\"}>&copy; Copyright 2020 GA</footer>\r\n\r\n\r\n        )\r\n    }\r\n\r\n}","import React from \"react\";\r\nimport {\r\n    Navbar,\r\n    NavbarBrand,\r\n    Container,Card\r\n} from \"reactstrap\";\r\n\r\nexport default class Listofgame extends React.Component{\r\n\r\nrender() {\r\n    // get all game list from the api and render it\r\n    const allGames = this.props.games.map((game, index) => {\r\n        return (\r\n            <li className={\"float\"} key={index}>\r\n                <div className={\"listgame \"}>\r\n                    <h5>{game.name}</h5>\r\n                    <img className=\"\"\r\n                         src={game.background_image}/>\r\n\r\n                    <h6>Released {game.released} </h6>\r\n                    <div className=\"badge badge-dark\">Rating {game.rating}</div>\r\n                    <br/>\r\n                    <button onClick={()=>this.props.add(game)} className={\"btn btn-outline-primary gamebtn\"}>Add</button>\r\n                </div>\r\n\r\n\r\n            </li>\r\n        );\r\n    });\r\n    return (\r\n<div>\r\n    <div className=\"jumbotron jumbotron-fluid\">\r\n        <div className=\"container\">\r\n            <h1 className=\"display-4\">Our Games List</h1>\r\n            <p className=\"lead\">This is a game website that help you add your favorite list of games.</p>\r\n        </div>\r\n    </div>\r\n    <ul>\r\n        {allGames}\r\n     \r\n    </ul>\r\n</div>\r\n\r\n    );\r\n}\r\n}","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport default class GameItem extends React.Component{\r\n        constructor(props) {\r\n        super(props)\r\n            \r\n        }\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <li className={\"float\"} >\r\n                    \r\n                \r\n                <div className={\"listgame \"}>\r\n                    <h5>{this.props.game.name} <i onClick={this.props.list} className=\"material-icons big\">add</i></h5>\r\n                    <img className=\"\"\r\n                         src={this.props.game.background_image}/>\r\n\r\n                    <h6>Released {this.props.game.released} </h6>\r\n                    <h4><div className=\"badge badge-dark\">Rating {this.props.game.rating}</div></h4>\r\n                    <br/>\r\n                    <span>\r\n\r\n                        <button onClick={()=>this.props.delete(this.props.game)} className={\"btn btn-danger gamebtn\"}>Delete</button>{'  '}\r\n                        </span>\r\n\r\n                        <Link className=\"btn btn-secondary gamebtn\" to={{pathname: '/edit',state: {name: this.props.game.name,id: this.props.game}}}>Edit</Link>\r\n\r\n                </div>\r\n\r\n\r\n            </li>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport GameItem from \"./GameItem\";\r\n//set state with empty list to hold selected game for delete\r\nexport default class Mygames extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            list:[],\r\n        }\r\n    }\r\n\r\n    // to push selected game that will be deleted to our list by set the state for the list\r\n    listOfDeleted = (game) => {\r\n        const list = [...this.state.list];\r\n        const filmIndex = list.indexOf(game);\r\n\r\n        if (filmIndex !== -1) {\r\n            list.splice(filmIndex, 1);\r\n           \r\n        } else {\r\n            list.push(game);\r\n           \r\n        }\r\n        this.setState({ list });\r\n\r\n    }\r\n    render() {\r\n            // to get all game list\r\n        const myGameslist = this.props.ourgame.map((game, index) => {\r\n            return (\r\n                <div key={index}>\r\n                    \r\n                <GameItem  list={()=>this.listOfDeleted(game)} delete={this.props.delete} key={index} game={game}></GameItem>\r\n                </div>\r\n            );\r\n        });\r\n\r\n        // to get all seleced list \r\n        const deletedlist = this.state.list.map((game, index) => {\r\n            \r\n            return (\r\n                <div key={index}>\r\n                <li key={index} className=\"lead\">{game.name}</li>\r\n                </div>\r\n            );\r\n        });\r\n     \r\n        // functon to check if the state is not empty then render the last of marked game in same page\r\n        const gameofselect = ()=> {\r\n            let item1 = \"\";\r\n       \r\n            if(this.state.list==\"\")\r\n            {\r\n                console.log(\"work\");\r\n            }\r\n            else {\r\n                return (\r\n                    item1 =   <div>\r\n                        \r\n                    <p className=\"lead\">You select : <ul>\r\n                       {deletedlist}\r\n                       <button onClick={()=>this.props.deleteSelectedGame(this.state.list) } className=\"btn btn-outline-dark\">Clear</button>\r\n                   </ul></p>\r\n                \r\n                   </div>\r\n                  \r\n                )\r\n            }\r\n           \r\n            }\r\n                \r\n        return (\r\n            <div>\r\n                <div className=\"jumbotron jumbotron-fluid\">\r\n                    <div className=\"container\">\r\n                        <h1 className=\"display-4\">My Games List</h1>\r\n                        <p className=\"lead\">This is a game website that help you add your favorite list of games.</p>\r\n                        <h4 className=\"lead\">Want add your own games</h4>\r\n                            {gameofselect()}\r\n                            \r\n                        <Link to=\"/add\" className=\"btn btn-primary\">Add Game</Link>{\" \"}\r\n                        <button onClick={()=>this.props.deleteAllGame()} className=\"btn btn-danger\">Delete All Games</button>\r\n                    </div>\r\n                </div>\r\n                <ul>\r\n\r\n                    {myGameslist}\r\n                </ul>\r\n                \r\n            </div>\r\n\r\n\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport Slider from 'react-animated-slider';\r\nimport 'react-animated-slider/build/horizontal.css';\r\nimport horizontalCss from 'react-animated-slider/build/horizontal.css';\r\n\r\n\r\nclass Home extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n                <div>\r\n                    <div className=\"jumbotron jumbotron-fluid\">\r\n                        <div className=\"container\">\r\n                            <h1 className=\"display-4\">Games Library</h1>\r\n                            <p className=\"lead\">This is a game website that help you add your favorite list of games from different platforms.</p>\r\n                        </div>\r\n                        <div className=\"container \">\r\n                            <Slider classNames={horizontalCss} autoplay={1000}>\r\n                                {this.props.games.map((item, index) => (\r\n                             <img src={item.background_image} height='1200px' width='400px'/>\r\n                                ))}\r\n                            </Slider>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n                </div>\r\n\r\n            );\r\n        }\r\n\r\n}\r\nexport default Home;\r\n","import React from \"react\"\r\nimport {Link} from \"react-router-dom\";\r\nexport default class Editgame extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state ={newGameName:''}\r\n    }\r\n    render() {\r\n       \r\n        return (\r\n            <div >\r\n            \r\n                <div className=\"jumbotron jumbotron-fluid\">\r\n                    <div className=\"container\">\r\n                        <h1 className=\"display-4\">Edit Game for {this.props.location.state.name}  </h1>\r\n                        \r\n                    </div>\r\n                </div>\r\n\r\n                    <div className=\"container\">\r\n                <form className=\"form-horizontal\">\r\n                    <label>Game Name </label>{\" \"}\r\n                    <input onChange={(e)=>{this.setState({newGameName:e.target.value})}} value={this.state.newGameName}  type=\"text\"  />\r\n\r\n\r\n                        <hr/>\r\n                        <div className=\"form-group\">\r\n                            <button onClick={(e,id)=>{\r\n                                e.preventDefault()\r\n                                this.props.edit(this.state.newGameName,this.props.location.state.id)\r\n                                }} type=\"submit\"  className=\"btn btn-primary\">Submit</button>\r\n                                \r\n                        </div>\r\n                        <Link className=\"btn btn-secondary gamebtn\" to=\"/mygames\">Back</Link>\r\n                </form>\r\n                \r\n                    </div>\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport default class Addgame extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n             gamename:'',\r\n            gamerating:'',\r\n            newItem1:\"\"\r\n        }\r\n    }\r\n    ontextchange = (e) =>\r\n    {\r\n        console.log(\"hello\",e.target.value);\r\n        this.setState({\r\n            newItem:e.target.value,\r\n\r\n        })\r\n    }\r\n    ontextchange1 = (e) =>\r\n    {\r\n        console.log(\"hello\",e.target.value);\r\n        if(e.target.value<=5)\r\n        {\r\n            this.setState({\r\n                newItem1:e.target.value\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n            // console.log(this.onChange())\r\n        const test = {name:this.state.newItem,rating:this.state.newItem1,background_image:\"http://www.stleos.uq.edu.au/wp-content/uploads/2016/08/image-placeholder.png\",released:\"Not assign yet\"};\r\n        return (\r\n            <div >\r\n                <div className=\"jumbotron jumbotron-fluid\">\r\n                    <div className=\"container\">\r\n                        <h1 className=\"display-4\">Add Game </h1>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"container\">\r\n                    <form className=\"form-horizontal\">\r\n                        <label>Game Name </label>{\" \"}\r\n                        <input onChange={this.ontextchange} value={this.state.newItem} type=\"text\"/>{\" \"}\r\n                        <label>Game Rating </label>{\" \"}\r\n                        <input maxLength=\"1\" onChange={this.ontextchange1} value={this.state.newItem1} type=\"number\"/>\r\n\r\n\r\n\r\n                        <hr/>\r\n                        <div className=\"form-group\">\r\n                            <button onClick={()=>this.props.Addowngame(test)}  type=\"submit\"  className=\"btn btn-primary\">Submit</button>\r\n                        </div>\r\n\r\n                    </form>\r\n                    <Link className=\"btn btn-secondary gamebtn\" to=\"/mygames\">Back</Link>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport NavBar from \"./comp/Nav\";\r\nimport Footer from \"./comp/Footer\";\r\nimport Listofgame from \"./comp/Listofgame\";\r\nimport Mygames from \"./comp/Mygames\";\r\nimport Home from \"./Home\";\r\nimport axios from 'axios';\r\nimport Editgame from \"./comp/Editgame\";\r\nimport Addgame from \"./comp/Addgame\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Route,\r\n    Link\r\n} from 'react-router-dom';\r\n//set stats for data\r\nclass App extends React.Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state ={\r\n        Games:[],\r\n        Mylistgame:[],\r\n        newItem:[]\r\n      }\r\n  }\r\n\r\n    //get games data from api after the page render\r\n    componentDidMount() {\r\n        console.log('getAllPosts');\r\n        axios({\r\n            method: 'get',\r\n            url: 'https://api.rawg.io/api/games'\r\n        })\r\n            .then(res => {\r\n                // console.log('RESPONSE: ', res);\r\n                // console.log('DATA: ', res.data.results);\r\n                this.setState({\r\n                    Games: res.data.results,\r\n                })\r\n            })\r\n            .catch(err => {\r\n                console.log('ERROR: ', err);\r\n            });\r\n    };\r\n    //assign the game from the last to my own list\r\n    Addgametomylist = (game) => {\r\n        const Mylistgame = [...this.state.Mylistgame];\r\n        const filmIndex = Mylistgame.indexOf(game);\r\n\r\n        if (filmIndex !== -1) {\r\n            // Mylistgame.splice(filmIndex, 1);\r\n            console.log(`Removing ${game.name} From Favors`);\r\n        } else {\r\n            Mylistgame.push(game);\r\n            console.log(`Adding ${game.name} To Favors`);\r\n        }\r\n        this.setState({ Mylistgame });\r\n\r\n    }\r\n\r\n    // add game that not from the list\r\n    Addowngame = (game) => {\r\n        const Mylistgame_2 = [...this.state.Mylistgame];\r\n        console.log(Mylistgame_2);\r\n        const filmIndex = Mylistgame_2.indexOf(game);\r\n\r\n        if (filmIndex !== -1) {\r\n            // Mylistgame.splice(filmIndex, 1);\r\n            console.log(`Removing ${game.name} From Favors`);\r\n        } else {\r\n            Mylistgame_2.push(game);\r\n            console.log(`Adding ${game.name} To Favors`);\r\n        }\r\n        console.log(Mylistgame_2);\r\n        this.setState({ Mylistgame:Mylistgame_2 });\r\n\r\n    }\r\n        //delete selected game\r\n        deleteGame = (game) => {\r\n            const Mylistgame = [...this.state.Mylistgame];\r\n            const filmIndex = Mylistgame.indexOf(game);\r\n\r\n            if (filmIndex !== -1) {\r\n                 Mylistgame.splice(filmIndex, 1);\r\n\r\n            } else {\r\n\r\n            }\r\n            this.setState({ Mylistgame });\r\n        }\r\n\r\n    //Deleted all in my games list\r\n    deleteAllGame = () => {\r\n\r\n        this.setState({ Mylistgame:[] });\r\n    }\r\n\r\n\r\n\r\n    // update my list game with new data\r\n    saveEdit =(game,id) => {\r\n            console.log(\"save edit\",game)\r\n            // change a game name\r\n            const array = id;\r\n            console.log(\"arrat\",array.id);\r\n                const findgameindex = this.state.Mylistgame.indexOf(array);\r\n\r\n                console.log(\"index \",findgameindex);\r\n            const game1 = {\r\n                ...this.state.Mylistgame[findgameindex]\r\n            };\r\n            console.log(game1)\r\n            game1.name = game;\r\n             const games = [...this.state.Mylistgame];\r\n             games[findgameindex] = game1;\r\n            this.setState({\r\n                Mylistgame:games,\r\n            })\r\n    }\r\n\r\n    // to deleted only marked game\r\n    deleteSelectedGame = (game) => {\r\n            const MylistgameDelete = [...this.state.Mylistgame];\r\n            const newGameArr = MylistgameDelete.filter(savedGame => game.indexOf(savedGame)==-1)\r\n\r\n            console.log(newGameArr, \"new game array\")\r\n            this.setState({ Mylistgame:newGameArr });\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\nrender() {\r\n\r\n  return (\r\n      // router to go to different pages\r\n      <Router>\r\n          <div className={\"App\"}>\r\n              <NavBar></NavBar>\r\n              {/*<Route exact path=\"/\" component={(props) => <Home {...props} games={this.state.Games} />} />*/}\r\n              <Route exact path=\"/Home\" component={(props) => <Home {...props} games={this.state.Games} />} />\r\n\r\n              <Route path=\"/List\" component={(props) => <Listofgame {...props} games={this.state.Games} add={this.Addgametomylist}  />} />\r\n\r\n              <Route path=\"/mygames\" component={(props) => <Mygames {...props} ourgame={this.state.Mylistgame} delete={this.deleteGame} edit={this.editGame} Addowngame={this.Addowngame} deleteAllGame={this.deleteAllGame} deleteSelectedGame={this.deleteSelectedGame} />} />\r\n\r\n              <Route path=\"/edit\" component={(props) => <Editgame {...props} games={this.state.Mylistgame} edit={this.saveEdit} gamename={this.props.gamename} editTheValue={this.ontextchangeforedit}  />} />\r\n\r\n              <Route path=\"/add\" component={(props) => <Addgame {...props} games={this.state.Mylistgame}  gamename={this.props.gamename} Addowngame={this.Addowngame}  />} />\r\n\r\n               <Footer></Footer>\r\n\r\n          </div>\r\n\r\n\r\n      </Router>\r\n\r\n\r\n  );\r\n}\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}